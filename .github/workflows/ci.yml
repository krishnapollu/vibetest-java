name: VibeTest CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with ${{ matrix.browser }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chrome, firefox, edge]
        java-version: [17]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome
      if: matrix.browser == 'chrome'
      uses: browser-actions/setup-chrome@v1

    - name: Setup Firefox
      if: matrix.browser == 'firefox'
      uses: browser-actions/setup-firefox@v1

    - name: Setup Edge
      if: matrix.browser == 'edge'
      uses: browser-actions/setup-edge@v1
      
    - name: Run Tests
      env:
        BROWSER: ${{ matrix.browser }}
        CHROME_HEADLESS: true
        FIREFOX_HEADLESS: true
        EDGE_HEADLESS: true
      run: |
        echo "Running tests on ${{ matrix.os }} with ${{ matrix.browser }}"
        mvn clean test -Dbrowser=${{ matrix.browser }} -Dheadless=true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.browser }}
        path: |
          target/surefire-reports/
          target/extent-reports/
          target/screenshots/
        retention-days: 30
        
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: logs-${{ matrix.os }}-${{ matrix.browser }}
        path: |
          target/logs/
          *.log
        retention-days: 30

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Organize imports
      run: mvn spotless:apply
      
    - name: Check code style
      run: mvn checkstyle:check
      
    - name: Compile code
      run: mvn clean compile
      
    - name: Run unit tests
      run: mvn test -Dtest=!*IntegrationTest

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Run OWASP dependency check
      run: mvn org.owasp:dependency-check-maven:check
      
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: target/dependency-check-report.html
        retention-days: 30

  report:
    name: Generate and Deploy Reports
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        path: test-results/
        
    - name: Generate consolidated report
      run: |
        mkdir -p reports
        echo "# VibeTest Test Results" > reports/README.md
        echo "Generated on: $(date)" >> reports/README.md
        echo "" >> reports/README.md
        echo "## Test Summary" >> reports/README.md
        find test-results -name "*.html" -exec echo "- [{}]({})" \; >> reports/README.md
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./reports
        publish_branch: gh-pages 